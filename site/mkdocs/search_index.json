{
    "docs": [
        {
            "location": "/", 
            "text": "Octave\n\n\nGNU Octave is software featuring a high-level programming language, primarily intended for numerical computations. Octave helps in solving linear and nonlinear problems numerically, and for performing other numerical experiments using a language that is mostly compatible with MATLAB. It may also be used as a batch-oriented language. Since it is part of the GNU Project, it is free software under the terms of the GNU General Public License.\n\n\nKnown Issues\n\n\nPlot window not responding\n\n\n\n\n\n\n\n\n\n\nSimple Examples\n\n\n\n\n\n\n18.2 Basic Matrix Functions\n\n\n\n\n\n\n8.1 Index Expressions", 
            "title": "<span class='fa fa-home'></span> Home"
        }, 
        {
            "location": "/#octave", 
            "text": "GNU Octave is software featuring a high-level programming language, primarily intended for numerical computations. Octave helps in solving linear and nonlinear problems numerically, and for performing other numerical experiments using a language that is mostly compatible with MATLAB. It may also be used as a batch-oriented language. Since it is part of the GNU Project, it is free software under the terms of the GNU General Public License.", 
            "title": "Octave"
        }, 
        {
            "location": "/#known-issues", 
            "text": "Plot window not responding      Simple Examples    18.2 Basic Matrix Functions    8.1 Index Expressions", 
            "title": "Known Issues"
        }, 
        {
            "location": "/matrix/", 
            "text": "Creating Matrix\n\n\nA = [ 1, 1, 2; 3, 5, 8; 13, 21, 32 ]\nA =\n    1    1    2\n    3    5    8\n   13   21   32\n\n# Creating an 1D column vector\na = [1; 2; 3]\na =\n   1\n   2\n   3\n\n# Creating an 1D row vector\nb = [1 2 3] \nb =\n   1   2   3\n\n# Creating a random m x n matrix\nrand(3, 2)\nans =\n   0.13567   0.51230\n   0.67646   0.19012\n   0.76147   0.89694\n\n# Creating a zero m x n matrix \nzeros(3, 2)\nans =\n   0   0\n   0   0\n   0   0\n\n# Creating an m x n matrix of ones\nones(3,2)\nans =\n   1   1\n   1   1\n   1   1\n\n# Creating an identity matrix\neye(3)\nDiagonal Matrix\n   1   0   0\n   0   1   0\n   0   0   1\n\n# Creating a diagonal matrix\na = [1 2 3]\ndiag(a)\nDiagonal Matrix\n   1   0   0\n   0   2   0\n   0   0   3\n\n\n\n\nAccessing Matrix Elements\n\n\n# Getting the dimension of a matrix\nA = [1 2 3; 4 5 6]\nsize(A)\nans =\n   2   3\n\n# Selecting rows\nA = [1 2 3; 4 5 6; 7 8 9]\nA(1, :)\nans =\n   1   2   3\nA(1:2, :)\nans =\n   1   2   3\n   4   5   6\n\n# Selecting columns\nA = [1 2 3; 4 5 6; 7 8 9]\nA(:, 1)\nans =\n   1\n   4\n   7\nA(:, 1:2)\nans =\n   1   2\n   4   5\n   7   8\n\n# Extracting rows and columns by criteria\nA = [1 2 3; 4 5 9; 7 8 9]\nA(A(:,3) == 9, :)\nans =\n   4   5   9\n   7   8   9\n\n# Accessing elements\nA = [1 2 3; 4 5 6; 7 8 9]\nA(1, 1)\nans =  1\nA(2, 3)\nans =  6\n\n\n\n\nSelection\n\n\n Index Expression\n\n A(1, [1, 2])  # row 1, columns 1 and 2\n\n A(1, 1:2)     # row 1, columns in range 1-2\n\n A(1, : )       # row 1, all columns\n\n\n Transpose A\n\n A'\nans =\n    1    3   13\n    1    5   21\n    2    8   32\n\n\n Inverse of the square matrix A\n\n inv(A)\nans =\n\n   2.00000  -2.50000   0.50000\n  -2.00000  -1.50000   0.50000\n   0.50000   2.00000  -0.50000\n\n\n\n\nProblem 1\n: Transform labels vector to labels matrix\n\n\n Input\nlabels =\n   1\n   1\n   3\n\n Output\nlabels =\n   1   0   0\n   1   0   0\n   0   0   1\n\n\n\n\nTwo solutions\n\n\n Solution 1\nnum_labels = size(labels, 1)\nout = zeros(num_labels, num_labels);\nfor i=1:num_labels\n  out(i, labels (i)) = 1;\nend\n\n\n Solution 2\nnum_labels = size(labels, 1)\nout = eye(num_labels)(labels, : )", 
            "title": "Matrix"
        }, 
        {
            "location": "/matrix/#creating-matrix", 
            "text": "A = [ 1, 1, 2; 3, 5, 8; 13, 21, 32 ]\nA =\n    1    1    2\n    3    5    8\n   13   21   32\n\n# Creating an 1D column vector\na = [1; 2; 3]\na =\n   1\n   2\n   3\n\n# Creating an 1D row vector\nb = [1 2 3] \nb =\n   1   2   3\n\n# Creating a random m x n matrix\nrand(3, 2)\nans =\n   0.13567   0.51230\n   0.67646   0.19012\n   0.76147   0.89694\n\n# Creating a zero m x n matrix \nzeros(3, 2)\nans =\n   0   0\n   0   0\n   0   0\n\n# Creating an m x n matrix of ones\nones(3,2)\nans =\n   1   1\n   1   1\n   1   1\n\n# Creating an identity matrix\neye(3)\nDiagonal Matrix\n   1   0   0\n   0   1   0\n   0   0   1\n\n# Creating a diagonal matrix\na = [1 2 3]\ndiag(a)\nDiagonal Matrix\n   1   0   0\n   0   2   0\n   0   0   3", 
            "title": "Creating Matrix"
        }, 
        {
            "location": "/matrix/#accessing-matrix-elements", 
            "text": "# Getting the dimension of a matrix\nA = [1 2 3; 4 5 6]\nsize(A)\nans =\n   2   3\n\n# Selecting rows\nA = [1 2 3; 4 5 6; 7 8 9]\nA(1, :)\nans =\n   1   2   3\nA(1:2, :)\nans =\n   1   2   3\n   4   5   6\n\n# Selecting columns\nA = [1 2 3; 4 5 6; 7 8 9]\nA(:, 1)\nans =\n   1\n   4\n   7\nA(:, 1:2)\nans =\n   1   2\n   4   5\n   7   8\n\n# Extracting rows and columns by criteria\nA = [1 2 3; 4 5 9; 7 8 9]\nA(A(:,3) == 9, :)\nans =\n   4   5   9\n   7   8   9\n\n# Accessing elements\nA = [1 2 3; 4 5 6; 7 8 9]\nA(1, 1)\nans =  1\nA(2, 3)\nans =  6", 
            "title": "Accessing Matrix Elements"
        }, 
        {
            "location": "/matrix/#selection", 
            "text": "Index Expression  A(1, [1, 2])  # row 1, columns 1 and 2  A(1, 1:2)     # row 1, columns in range 1-2  A(1, : )       # row 1, all columns  Transpose A  A'\nans =\n    1    3   13\n    1    5   21\n    2    8   32  Inverse of the square matrix A  inv(A)\nans =\n\n   2.00000  -2.50000   0.50000\n  -2.00000  -1.50000   0.50000\n   0.50000   2.00000  -0.50000  Problem 1 : Transform labels vector to labels matrix   Input\nlabels =\n   1\n   1\n   3  Output\nlabels =\n   1   0   0\n   1   0   0\n   0   0   1  Two solutions   Solution 1\nnum_labels = size(labels, 1)\nout = zeros(num_labels, num_labels);\nfor i=1:num_labels\n  out(i, labels (i)) = 1;\nend  Solution 2\nnum_labels = size(labels, 1)\nout = eye(num_labels)(labels, : )", 
            "title": "Selection"
        }
    ]
}